Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values) return _elm.Main.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Random = Elm.Random.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Svg = Elm.Svg.make(_elm),
   $Svg$Attributes = Elm.Svg.Attributes.make(_elm),
   $Svg$Events = Elm.Svg.Events.make(_elm),
   $Window = Elm.Window.make(_elm);
   var _op = {};
   var ClickedBall = function (a) {    return {ctor: "ClickedBall",_0: a};};
   var Reset = {ctor: "Reset"};
   var picture = $Signal.mailbox(Reset);
   var ClickedRefresh = {ctor: "ClickedRefresh"};
   var shift_ball_left = function (ball) {    return _U.update(ball,{x: ball.x - 100});};
   var resetBallLocation = F2(function (n,ball) {    return _U.update(ball,{x: n * 80 + 400,y: 60});});
   var resetPositions = function (current_postions) {    return A2($List.indexedMap,resetBallLocation,current_postions);};
   var initial_state = {window_width: 0
                       ,window_height: 0
                       ,user_choice: 0
                       ,score: 0
                       ,rng: A2($Random.$int,0,9)
                       ,target_number_and_seed: {ctor: "_Tuple2",_0: 1,_1: $Random.initialSeed(314)}
                       ,ball_locations: resetPositions(A2($List.repeat,10,{x: 0,y: 0}))};
   var update = F2(function (action,current_state) {
      var _p0 = action;
      switch (_p0.ctor)
      {case "ClickedRefresh": return _U.update(current_state,
           {target_number_and_seed: A2($Random.generate,current_state.rng,$Basics.snd(current_state.target_number_and_seed))
           ,user_choice: 0
           ,ball_locations: resetPositions(current_state.ball_locations)});
         case "Reset": return _U.update(current_state,{user_choice: 0,ball_locations: resetPositions(current_state.ball_locations)});
         default: var _p1 = _p0._0;
           return _U.eq(_p1,$Basics.fst(current_state.target_number_and_seed)) ? _U.update(current_state,
           {user_choice: _p1 + 1
           ,score: current_state.score + 1
           ,ball_locations: A2($Basics._op["++"],
           A2($List.map,shift_ball_left,A2($List.take,_p1 + 1,current_state.ball_locations)),
           A2($List.drop,_p1 + 1,current_state.ball_locations))}) : _U.update(current_state,{user_choice: _p1 + 1,score: current_state.score - 1});}
   });
   var updatep = function (actions) {    return A3($Signal.foldp,update,initial_state,actions);};
   var Model = F7(function (a,b,c,d,e,f,g) {
      return {window_height: a,window_width: b,user_choice: c,score: d,rng: e,target_number_and_seed: f,ball_locations: g};
   });
   var Position = F2(function (a,b) {    return {x: a,y: b};});
   var cr30 = F5(function (xpos,ypos,n,labelSize,picture_address) {
      return A2($Svg.g,
      _U.list([$Svg$Events.onClick(A2($Signal.message,picture_address,ClickedBall(n)))]),
      _U.list([A2($Svg.circle,
              _U.list([$Svg$Attributes.cx(xpos)
                      ,$Svg$Attributes.cy(ypos)
                      ,$Svg$Attributes.r("30")
                      ,$Svg$Attributes.fill("white")
                      ,$Svg$Attributes.style("stroke:rgb(255,0,0);stroke-width:2")]),
              _U.list([]))
              ,A2($Svg.text$,
              _U.list([$Svg$Attributes.x(xpos),$Svg$Attributes.y(ypos),$Svg$Attributes.fontSize(labelSize)]),
              _U.list([$Svg.text($Basics.toString(n + 1))]))]));
   });
   var ten_circles = F2(function (picture_address,current_state) {
      var labelSize = A2($Basics.max,0,30 - current_state.score);
      var cx = F2(function (n,ball) {    return A5(cr30,$Basics.toString(ball.x),$Basics.toString(ball.y),n,$Basics.toString(labelSize),picture_address);});
      return A2($List.indexedMap,cx,current_state.ball_locations);
   });
   var target_area = F3(function (picture_address,_p2,current_state) {
      var _p3 = _p2;
      return A2($Svg.g,
      _U.list([$Svg$Events.onClick(A2($Signal.message,picture_address,ClickedRefresh))]),
      _U.list([A2($Svg.rect,
              _U.list([$Svg$Attributes.x("0")
                      ,$Svg$Attributes.y("120")
                      ,$Svg$Attributes.width("120")
                      ,$Svg$Attributes.height("120")
                      ,$Svg$Attributes.rx("15")
                      ,$Svg$Attributes.ry("15")
                      ,$Svg$Attributes.fill("green")]),
              _U.list([]))
              ,A2($Svg.text$,
              _U.list([$Svg$Attributes.x("0"),$Svg$Attributes.y("160"),$Svg$Attributes.fontSize("55")]),
              _U.list([$Svg.text($Basics.toString(1 + $Basics.fst(current_state.target_number_and_seed)))]))
              ,A2($Svg.rect,
              _U.list([$Svg$Attributes.x("750")
                      ,$Svg$Attributes.y("120")
                      ,$Svg$Attributes.width("120")
                      ,$Svg$Attributes.height("120")
                      ,$Svg$Attributes.rx("15")
                      ,$Svg$Attributes.ry("15")
                      ,$Svg$Attributes.fill("lightBlue")]),
              _U.list([]))
              ,A2($Svg.text$,
              _U.list([$Svg$Attributes.x("750"),$Svg$Attributes.y("160"),$Svg$Attributes.fontSize("55")]),
              _U.list([$Svg.text($Basics.toString(current_state.score))]))]));
   });
   var renderGUI = F3(function (picture_address,_p4,current_state) {
      var _p5 = _p4;
      var _p7 = _p5._0;
      var _p6 = _p5._1;
      var boardHeight = $Basics.toString(A2($Basics.min,240,_p6));
      var boardWidth = $Basics.toString(A2($Basics.min,1200,_p7));
      return A2($Svg.svg,
      _U.list([$Svg$Attributes.width(boardWidth)
              ,$Svg$Attributes.height(boardHeight)
              ,$Svg$Attributes.viewBox(A2($Basics._op["++"],"0 0 ",A2($Basics._op["++"],boardWidth,A2($Basics._op["++"]," ",boardHeight))))
              ,$Svg$Attributes.fill("lightGray")]),
      $List.concat(_U.list([A2(ten_circles,picture_address,current_state)
                           ,_U.list([A3(target_area,picture_address,{ctor: "_Tuple2",_0: _p7,_1: _p6},current_state)])])));
   });
   var justGUI_main = A3(renderGUI,picture.address,{ctor: "_Tuple2",_0: 1200,_1: 240},initial_state);
   var view = F3(function (address,_p8,current_state) {
      var _p9 = _p8;
      return A2($Html.div,
      _U.list([]),
      _U.list([A2($Html.div,_U.list([]),_U.list([A3(renderGUI,picture.address,{ctor: "_Tuple2",_0: _p9._0,_1: _p9._1},current_state)]))
              ,A2($Html.div,
              _U.list([]),
              _U.list([A2($Html.ol,
              _U.list([]),
              _U.list([A2($Html.li,_U.list([]),_U.list([$Html.text("Click in the Green square to get a new target number to click.")]))
                      ,A2($Html.li,_U.list([]),_U.list([$Html.text("Click on the ball with the number shown in the Green square ")]))
                      ,A2($Html.li,_U.list([]),_U.list([$Html.text("The light Blue square indicates your score.")]))
                      ,A2($Html.li,_U.list([]),_U.list([$Html.text("The numbers on the balls become smaller as you get more correct")]))
                      ,A2($Html.li,_U.list([]),_U.list([$Html.text("And they get bigger when you make mistakes.")]))]))]))]));
   });
   var live_main = A3($Signal.map2,view(picture.address),$Window.dimensions,updatep(picture.signal));
   var main = live_main;
   return _elm.Main.values = {_op: _op
                             ,renderGUI: renderGUI
                             ,target_area: target_area
                             ,cr30: cr30
                             ,ten_circles: ten_circles
                             ,justGUI_main: justGUI_main
                             ,live_main: live_main
                             ,main: main
                             ,Position: Position
                             ,Model: Model
                             ,resetBallLocation: resetBallLocation
                             ,resetPositions: resetPositions
                             ,shift_ball_left: shift_ball_left
                             ,initial_state: initial_state
                             ,ClickedRefresh: ClickedRefresh
                             ,Reset: Reset
                             ,ClickedBall: ClickedBall
                             ,picture: picture
                             ,updatep: updatep
                             ,update: update
                             ,view: view};
};